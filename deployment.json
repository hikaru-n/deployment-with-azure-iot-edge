{
  "$schema-template": "4.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "docker": {
                "username": "<ACR_NAME>",
                "password": "<ACR_PASSWORD>",
                "address": "docker.io"
              },
              "<ACR_NAME>": {
                "username": "<ACR_NAME>",
                "password": "<ACR_PASSWORD>",
                "address": "<ACR_NAME>.azurecr.io"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.2",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.2",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "client": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.client}",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/dev/video${CAMERA_INDEX}:/dev/video${CAMERA_INDEX}"
                  ],
                  "Devices": [
                    {
                      "PathOnHost": "/dev/video${CAMERA_INDEX}",
                      "PathInContainer": "/dev/video${CAMERA_INDEX}",
                      "CgroupPermissions": "mrw"
                    }
                  ]
                },
                "Entrypoint": ["python3", "main.py"]
              }
            },
            "env": {
              "CONNECTION_STRING": {
                "value": "${CONNECTION_STRING}"
              },
              "API_HOST": {
                "value": "${API_HOST}"
              },
              "CAMERA_INDEX": {
                "value": "${CAMERA_INDEX}"
              }
            }
          },
          "serving": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.serving}",
              "createOptions": {
                "Hostname": "${API_HOST}",
                "Domainname": "${API_HOST}",
                "Entrypoint": ["flask", "run", "--host=0.0.0.0", "--port=80"],
                "HostConfig": {
                  "Runtime": "nvidia"
                }
              }
            },
            "env": {
              "PYTHONDONTWRITEBYTECODE": {
                "value": "1"
              },
              "FLASK_APP": {
                "value": "entrypoints/app.py"
              },
              "LC_ALL": {
                "value": "C.UTF-8"
              },
              "LANG": {
                "value": "C.UTF-8"
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "routes": {
          "ServingToIoTHub": "FROM /messages/modules/client/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    }
  }
}
